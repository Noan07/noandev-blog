---
import FormattedDate from './FormattedDate.astro';
import TagList from './TagList.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
  posts: CollectionEntry<'blog'>[];
  activeTag?: string;
}

const { posts, activeTag } = Astro.props;
---

<section>
    <div class="blog-header">
        <h1 class="blog-title">
            Blog
            <svg class="blog-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
                <ellipse cx="12" cy="12" rx="10" ry="8" />
                <path d="M4 17L3 21l4-1" />
                <circle cx="12" cy="12" r="0.5"></circle>
                <circle cx="8" cy="12" r="0.5"></circle>
                <circle cx="16" cy="12" r="0.5"></circle>
            </svg>
        </h1>
        <TagList activeTag={activeTag} />
    </div>
  <ul id="post-list">
    {posts.map((post) => (
      <li class="post-item" data-tags={post.data.tags.join(',')}>
        <a href={`/blog/${post.id}/`}>
          <img width={720} height={400} src={post.data.heroImage} alt="" />
          <h1 class="title">{post.data.title}</h1>
          
          <p class="description">{post.data.description}</p>
          <div class="post-tags">
            {post.data.tags.map((postTag) => (
              <a 
                href={`/blog/tag/${postTag}`} 
                class={`post-tag ${postTag === activeTag ? 'active' : ''}`} 
                data-tag={postTag}
              >
                {postTag}
              </a>
            ))}
          </div>
          {/* <p class="date">
              <FormattedDate date={post.data.pubDate} />
          </p> */}
        </a>
      </li>
    ))}
  </ul>
  <p id="no-posts" style="display: none;">Aucun article trouv√© avec ce tag.</p>
</section>

<style>
  .title-container h4 {
    margin: 0;
  }
  .blog-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    white-space: nowrap;
  }
  ul {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    list-style-type: none;
    margin: 0;
    padding: 0;
  }
  ul li {
    width: calc(50% - 0.75rem);
  }
  ul li * {
    text-decoration: none;
    transition: 0.2s ease;
  }
  ul li img {
    margin-bottom: 0.5rem;
    border-radius: 12px;
    background-color: white;
  }
  ul li a {
    display: block;
  }
  .title {
    margin: 0;
    color: var(--primary-color);
    line-height: 1;
  }
  .description {
    color: var(--secondary-color);
  }
  .date {
    margin: 0;
    color: rgb(var(--gray));
  }
  .post-tags {
    display: flex;
    flex-wrap: wrap;
    margin-top: 0.5rem;
  }
  .post-tag {
    display: inline-block;
    margin-right: 0.5rem;
    padding: 0.2rem 0.5rem;
    background-color: var(--secondary-background);
    color: var(--primary-color);
    border-radius: 4px;
    font-size: 0.7rem;
    text-decoration: none;
    transition: all 0.2s ease;
  }
  .post-tag:hover {
    background-color: var(--accent);
  }
  .post-tag.active {
    background-color: var(--accent);
  }
  ul li a:hover h4,
  ul li a:hover .date {
    color: var(--accent);
  }
  .blog-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }
  ul a:hover img {
    box-shadow: var(--box-shadow);
  }
  @media (max-width: 1024px) {
    ul li {
      width: calc(50% - 1rem);
    }
  }
  @media (max-width: 720px) {
    ul {
      gap: 0.5em;
    }
    ul li {
      width: 100%;
    }
    ul li:not(:last-child) {
      padding-bottom: 1em;
    }
    ul li:first-child .title {
      font-size: 1.563em;
    }
  }
  .blog-title {
    display: inline-flex;
    align-items: center;
    vertical-align: middle;
  }
  .blog-title svg {
    width: 24px;
    height: 24px;
  }
</style>